#Creating table name customer details and Debit_deatails which contains required columns

CREATE TABLE CUSTOMER_DETAILS(
ACC_NO INT PRIMARY KEY,
NAME VARCHAR(75) NOT NULL,
ADDRESS VARCHAR(300) NOT NULL,
BALANCE NUMERIC(20,2),
PH_NO VARCHAR(15),
EMAIL_ID VARCHAR(50),
BRANCH_CODE VARCHAR(20)
);

CREATE TABLE DEBIT_DETAILS(
DEBIT_CARD_NO VARCHAR(25) PRIMARY KEY,
ACC_NO INT NOT NULL,
CVV VARCHAR(3) NOT NULL,
NAME VARCHAR(75),
EXPIRY_YEAR INT,
EXPIRY_MONTH INT
);

#Inserting some values to the tables.

INSERT INTO CUSTOMER_DETAILS(
ACC_NO, NAME, ADDRESS, BALANCEC, PH_NO, EMAIL_ID, BRANCH_CODE) 
VALUES (1234567891, 'LARA', 'NO:5, NEWYORK, USA', 15000.45, '2345234567', 'lara@gmail.com',  'ABC4074'),
(1234567892, 'ROBERT', 'NO:7, CALIFORNIA, USA', 250000.23, '5675672324', 'robert@gmail.com', 'ABC4074');

INSERT INTO DEBIT_DETAILS(
DEBIT_CARD_NO, ACC_NO, CVV, NAME, EXPIRY_YEAR, EXPIRY_MONTH)
VALUES ('1234567891234567', 1234567891, '345', 'LARA', 2043, 08),
('1234567891234568', 1234567892, '456', 'ROBERT', 2045, 11);

#Creating table Transaction_log to store the transaction details

CREATE TABLE TRANSACTION_LOG(
TRANSACTION_TIME TIMESTAMP NOT NULL DEFAULT NOW(),
ACC_NO INT NOT NULL,
TRANSACTION_TYPE VARCHAR(30) NOT NULL,
TRANSACTION_ID SERIAL PRIMARY KEY
);

#Creating a trigger function named withdrawal_log 

CREATE FUNCTION WITHDRAWAL_LOG() RETURNS TRIGGER AS $$
BEGIN
INSERT INTO TRANSACTION_LOG (TRANSACTION_TIME, ACC_NO, TRANSACTION_TYPE, WITHDRAWAL_AMOUNT)
VALUES (NOW(), NEW.ACC_NO, 'WITHDRAWAL', OLD.BALANCE - NEW.BALANCE);
RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

#Creating trigger named Bank_log to call the function withdrawal_log

CREATE TRIGGER BANK_LOG AFTER UPDATE ON CUSTOMER_DETAILS
FOR EACH ROW EXECUTE PROCEDURE WITHDRAWAL_LOG();
"
"""